<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Task;
use AppBundle\Entity\Todo;
use AppBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository
{
    /**
     * @param Todo $todo
     * @return \Doctrine\ORM\Query
     */
    public function findByTodo(Todo $todo)
    {
        return $this->createQueryBuilder('task')
            ->andWhere('task.todo = :todo')
            ->setParameter('todo', $todo)
            ->getQuery();
    }

    /**
     * @param User $user
     * @param $todoID
     * @return mixed
     */
    public function findByUserAndTodo(User $user, $todoID)
    {
        try {
            return $this->createQueryBuilder('todo')
                ->andWhere('todo.user = :user', 'todo.id = :id')
                ->setParameter('user', $user)
                ->setParameter('id', $todoID)
                ->getQuery()
                ->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
        }
    }

    /**
     * @param $todoId
     * @param User $user
     * @param $task
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByUserAndTodo($todoId, User $user, $task)
    {
        return $this->createQueryBuilder('task')
            ->leftJoin('task.todo', 'todo')
            ->where('todo.user =:user', 'todo = :todo', 'todo.task =:task')
            ->setParameter('todo', $todoId)
            ->setParameter('user', $user)
            ->setParameter('task', $task)
            ->getQuery()
            ->getSingleResult();

   }
}
